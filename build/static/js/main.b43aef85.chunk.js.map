{"version":3,"sources":["components/Registration/registration.js","components/Login/login.js","redux/actions/userAction.js","redux/types/type.js","App.js","serviceWorker.js","redux/reducers/rootReducer.js","index.js"],"names":["Registration","history","useHistory","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","backendData","setBackendData","setTimeout","push","Contanier","Overlay","SuccessAlert","style","color","Form","onSubmit","e","preventDefault","axios","post","process","then","res","data","msg","catch","error","console","log","RegistrationParagraf","BackendDataMsg","Input","value","type","placeholder","onChange","target","Button","GoToSignIn","href","styled","div","p","form","input","button","a","Login","dispatch","useDispatch","state","useSelector","user","login","setLogin","backendMSG","setBackendMSG","LoginParagraf","BackendNotificationData","onClick","Axios","massege","id","err","RegisteredParagraf","CreateAccaount","App","exact","path","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","Object","assign","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b43aef85.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Registration = () => {\r\n  const history = useHistory();\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [backendData, setBackendData] = useState(\"\");\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_IP}/registration`, {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((res) => setBackendData(res.data.msg))\r\n      .catch((error) => console.log(error));\r\n    console.log(process.env.REACT_APP_IP);\r\n  };\r\n\r\n  if (backendData === \"Successfull\") {\r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Contanier>\r\n        {backendData === \"Successfull\" ? (\r\n          <Overlay>\r\n            <SuccessAlert>\r\n              <CheckCircleIcon style={{ color: \"green\" }} />\r\n              {backendData}\r\n            </SuccessAlert>\r\n          </Overlay>\r\n        ) : (\r\n          <Form onSubmit={handelSubmit}>\r\n            <RegistrationParagraf>Registration</RegistrationParagraf>\r\n            <BackendDataMsg>{backendData}</BackendDataMsg>\r\n            <Input\r\n              value={firstName}\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <Input\r\n              value={lastName}\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <Input\r\n              value={email}\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              value={password}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button>Submit</Button>\r\n            <GoToSignIn href=\"/\">Sign In</GoToSignIn>\r\n          </Form>\r\n        )}\r\n      </Contanier>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Contanier = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst RegistrationParagraf = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: auto;\r\n  background: none;\r\n  font-size: 30px;\r\n  margin-bottom: 30px;\r\n  color: #707c97;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 400px;\r\n  height: auto;\r\n  padding: 15px;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 10px;\r\n  background: white;\r\n  box-shadow: 23.8596px 5.61404px 50px rgba(0, 0, 0, 0.02),\r\n    35.0877px 0px 70px rgba(86, 128, 248, 0.05),\r\n    14.0351px 0px 25px rgba(86, 128, 248, 0.03);\r\n  z-index: 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 50px;\r\n  padding-left: 10px;\r\n  outline: none;\r\n  background: #ffffff;\r\n  border-radius: 6px;\r\n  margin-bottom: 30px;\r\n  background: transparent;\r\n  font-size: 15px;\r\n  border: 0.8px solid rgb(102, 102, 102);\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 103%;\r\n  height: 50px;\r\n  background: linear-gradient(100.61deg, #7cb8f7 0%, #2a8bf2 100%);\r\n  border: 1px solid #ffffff;\r\n  outline: none;\r\n  box-sizing: border-box;\r\n  box-shadow: 10px 6px 25px rgba(42, 139, 242, 0.15),\r\n    4px 4px 25px rgba(42, 139, 242, 0.05), 6px 6px 25px rgba(42, 139, 242, 0.15);\r\n  border-radius: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  &:focus {\r\n    background: linear-gradient(100.61deg, #7cb8f7 100%, #2a8bf2 0%);\r\n  }\r\n`;\r\nconst BackendDataMsg = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: auto;\r\n  color: red;\r\n  background: none;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  z-index: 20;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SuccessAlert = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 30%;\r\n  height: 30%;\r\n  border-radius: 10px;\r\n  padding: 10px 10px;\r\n`;\r\n\r\nconst GoToSignIn = styled.a`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  text-decoration: none;\r\n  color: #2a8bf2;\r\n  text-decoration: none;\r\n  background: none;\r\n  padding-top: 20px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userData } from \"../../redux/actions/userAction\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Login = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const state = useSelector((state) => state.user);\r\n  console.log(state);\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [backendMSG, setBackendMSG] = useState(\"\");\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    Axios.post(`${process.env.REACT_APP_IP}/login`, {\r\n      email: login,\r\n      password: password,\r\n    })\r\n      .then((res) => {\r\n        dispatch(\r\n          userData(\r\n            res.data.massege,\r\n            res.data.firstName,\r\n            res.data.lastName,\r\n            res.data.id\r\n          )\r\n        );\r\n        setBackendMSG(res.data.msg);\r\n        if (res.data.massege) {\r\n          history.push(\"/chat_dashboard\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const routGotoRegistraction = () => {\r\n    history.push(\"/registration\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Contanier>\r\n        <Form>\r\n          <LoginParagraf>Login</LoginParagraf>\r\n          <BackendNotificationData>{backendMSG}</BackendNotificationData>\r\n          <Input\r\n            value={login}\r\n            type=\"text\"\r\n            placeholder=\"Login\"\r\n            onChange={(e) => setLogin(e.target.value)}\r\n          />\r\n          <Input\r\n            value={password}\r\n            type=\"Password\"\r\n            placeholder=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Button onClick={handelSubmit}>Submit</Button>\r\n          <RegisteredParagraf>\r\n            Not registered?\r\n            <CreateAccaount onClick={routGotoRegistraction}>\r\n              create an account\r\n            </CreateAccaount>\r\n          </RegisteredParagraf>\r\n        </Form>\r\n      </Contanier>\r\n    </>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  userData: PropTypes.func,\r\n};\r\n\r\nconst Contanier = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst LoginParagraf = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: auto;\r\n  background: none;\r\n  font-size: 30px;\r\n  margin-bottom: 30px;\r\n  color: #707c97;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 400px;\r\n  height: auto;\r\n  padding: 15px;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 10px;\r\n  background: white;\r\n  box-shadow: 23.8596px 5.61404px 50px rgba(0, 0, 0, 0.02),\r\n    35.0877px 0px 70px rgba(86, 128, 248, 0.05),\r\n    14.0351px 0px 25px rgba(86, 128, 248, 0.03);\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 50px;\r\n  outline: none;\r\n  background: #ffffff;\r\n  border-radius: 6px;\r\n  margin-bottom: 30px;\r\n  background: transparent;\r\n  font-size: 15px;\r\n  border: 0.8px solid rgb(102, 102, 102);\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 103%;\r\n  height: 50px;\r\n  background: linear-gradient(100.61deg, #7cb8f7 0%, #2a8bf2 100%);\r\n  border: 1px solid #ffffff;\r\n  outline: none;\r\n  box-sizing: border-box;\r\n  box-shadow: 10px 6px 25px rgba(42, 139, 242, 0.15),\r\n    4px 4px 25px rgba(42, 139, 242, 0.05), 6px 6px 25px rgba(42, 139, 242, 0.15);\r\n  border-radius: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  &:focus {\r\n    background: linear-gradient(100.61deg, #7cb8f7 100%, #2a8bf2 0%);\r\n  }\r\n`;\r\n\r\nconst RegisteredParagraf = styled.p`\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n  width: 100%;\r\n  height: auto;\r\n  background: none;\r\n  color: #666666;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CreateAccaount = styled.a`\r\n  margin-left: 10px;\r\n  color: #2a8bf2;\r\n  text-decoration: none;\r\n  background: none;\r\n`;\r\n\r\nconst BackendNotificationData = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: auto;\r\n  background: none;\r\n  color: red;\r\n  padding-bottom: 26px;\r\n`;\r\n","import { USER_DATA } from \"../types/type\";\r\n\r\nexport function userData(massege, firstName, lastName, id) {\r\n  return {\r\n    type: USER_DATA,\r\n    massege: massege,\r\n    firstName: firstName,\r\n    lastName: lastName,\r\n    id: id,\r\n  };\r\n}\r\n","export const USER_DATA = \"USER_DATA\";\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Registration } from \"./components/Registration/registration\";\r\nimport { Login } from \"./components/Login/login\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Login />\r\n            </Route>\r\n            <Route exact path=\"/Registration\">\r\n              <Registration />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { USER_DATA } from \"../types/type\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default function User(state = {}, action) {\r\n  switch (action.type) {\r\n    case USER_DATA:\r\n      return [\r\n        Object.assign(state, {\r\n          massege: action.massege,\r\n          firstName: action.firstName,\r\n          lastName: action.lastName,\r\n          id: action.id,\r\n        }),\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: User,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { rootReducer } from \"../src/redux/reducers/rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}